{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple example NodeJS API project to demonstrate Swagger Documentation",
    "version": "1.0.0",
    "title": "Tasks API",
    "contact": {
      "email": "abc@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "localhost:3080",
  "basePath": "/api",
  "paths": {
    "/todos": {
      "get": {
        "summary": "Get all the tasks",
        "description": "Get all the tasks",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
				"tags": [
					"User"
				],
				"summary": "Create a user",
				"description": "Create a new user",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									}
								},
								"example": {
									"name": "user name sample",
									"description": "user description sample"
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Created"
					},
					"500": {
						"description": "User Already Exists"
					}
				}
			},
      "get": {
        "tags": [
					"User"
				],
        "summary": "Get all the users",
        "description": "Get all the users",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "put": {
        "summary": "Update the tasks",
        "description": "Update the tasks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "task id that needs to be deleted",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "task object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/todo/{id}": {
      "delete": {
        "summary": "Delete the task",
        "description": "Delete the task",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "task id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "todosResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "uuid"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "cnpj": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "uf": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "task": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "InvalidResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
